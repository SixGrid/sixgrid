name: Build Release
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Github Release Tag'
        required: true
      name:
        description: 'Github Release Name'
        required: false
      description:
        description: 'Github Release Description'
        required: false
        
  #pull_request:
  #push:
  #  paths-ignore:
  #    - 'proto/**'
  #    - '**.MD'
  #    - '**.md'
  #    - '.github/**'
  #  branches:
  #    - 'stable'
jobs:
  publish:
    runs-on: ${{matrix.os}}
    
    permissions: write-all
    
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: sixgrid-linux-amd64.tar.gz
            asset_name: "sixgrid-linux-amd64.tar.gz"
          - os: ubuntu-latest
            artifact_name: sixgrid-linux-amd64.zip
            asset_name: "sixgrid-linux-amd64.zip"
          - os: ubuntu-latest
            artifact_name: sixgrid-amd64.flatpak
            asset_name: "sixgrid-amd64.flatpak"
          - os: ubuntu-latest
            artifact_name: "sixgrid-linux-amd64.AppImage"
            asset_name: "sixgrid-linux-amd64.AppImage"
          - os: windows-latest
            artifact_name: sixgrid-windows-amd64-setup.msi
            asset_name: "sixgrid-win-amd64-setup.msi"
          - os: windows-latest
            artifact_name: sixgrid-windows-amd64.zip
            asset_name: "sixgrid-win-amd64.zip"
    
    steps:
      - name: Check out Git Repo
        uses: actions/checkout@master
        
      - name: Install Node.js, and NPM
        uses: actions/setup-node@v1
        with:
          node-version: 16
          
      - run: npm i -g npm@latest-7
      - run: npm install --legacy-peer-deps
      - run: npm install --include=dev
      - run: node ./build-scripts/prebuild.js
      - name: Install flatpak dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt install flatpak flatpak-builder -y
          flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo -y
          flatpak install flathub org.freedesktop.Sdk/x86_64/23.08 org.freedesktop.Platform/x86_64/23.08 app/org.electronjs.Electron2.BaseApp/x86_64/23.08 -y
      - name: Build Electron Application
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - run: node build-scripts/get-artifacts.js
      
      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: build/artifacts/${{ matrix.asset_name }}
          tag_name: ${{ github.event.inputs.tag }}
          draft: false
          prerelease: true
          
      # - id: setup-steamcmd
      #   name: Setup SteamCMD
      #   uses: CyberAndrii/setup-steamcmd@v1.1.1
      
      # - name: Deploy to Steam
      #   env:
      #     STEAM_HOME: ${{ steps.setup-steamcmd.outputs.directory }}
      #     STEAM_CMD: ${{ steps.setup-steamcmd.outputs.executable }}
      #     USERNAME: ${{ secrets.STEAM_USERNAME }}
      #     PASSWORD: ${{ secrets.STEAM_PASSWORD }}
      #     configVdf: ${{ secrets.STEAM_CONFIG_VDF }}
      #     ssfnFileName: ${{ secrets.STEAM_SSFN_FILE_NAME }}
      #     ssfnFileContents: ${{ secrets.STEAM_SSFN_FILE_CONTENTS }}
      #   run: cd steampipe && bash ./gitlab-actions.sh
