name: Build Release
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Github Release Tag'
        required: true
      name:
        description: 'Github Release Name'
        required: true
      description:
        description: 'Github Release Description'
        required: false
        
  #pull_request:
  #push:
  #  paths-ignore:
  #    - 'proto/**'
  #    - '**.MD'
  #    - '**.md'
  #    - '.github/**'
  #  branches:
  #    - 'stable'
jobs:
#   mktag:
#     runs-on: ubuntu-latest
    
#     outputs:
#       upload_url: ${{ steps.create_release.outputs.upload_url }}
#       web_url: ${{ steps.create_release.outputs.html_url }}
    
#     permissions: write-all
    
#     steps:
#       - uses: actions/checkout@master
          
#       - name: Create Release Draft
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ github.event.inputs.tag }}
#           release_name: ${{ github.event.inputs.name }}
#           draft: false
#           prerelease: true
      
  publish:
#     needs: mktag
  
    runs-on: ${{matrix.os}}
    
    permissions: write-all
    
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: sixgrid-linux-amd64.tar.gz
            asset_name: "sixgrid-linux-amd64.tar.gz"
    
    steps:
      - name: Check out Git Repo
        uses: actions/checkout@master
        
      - name: Install Node.js, and NPM
        uses: actions/setup-node@v1
        with:
          node-version: 16
          
      - run: npm i -g npm@latest-6
      - run: npm install --include=dev
      - run: node ./build-scripts/prebuild.js
      - name: Build Electron Application
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - run: node build-scripts/get-artifacts.js
      
      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: build/artifacts/*
          tag_name: ${{ github.event.inputs.tag }}
          draft: false
          prerelease: true
          
      - id: setup-steamcmd
        name: Setup SteamCMD
        uses: CyberAndrii/setup-steamcmd@v1.1.1
      
      - name: Deploy to Steam
        env:
          STEAM_HOME: ${{ steps.setup-steamcmd.outputs.directory }}
          STEAM_CMD: ${{ steps.setup-steamcmd.outputs.executable }}
          USERNAME: ${{ secrets.STEAM_USERNAME }}
          PASSWORD: ${{ secrets.STEAM_PASSWORD }}
          configVdf: ${{ secrets.STEAM_CONFIG_VDF }}
          ssfnFileName: ${{ secrets.STEAM_SSFN_FILE_NAME }}
          ssfnFileContents: ${{ secrets.STEAM_SSFN_FILE_CONTENTS }}
        run: cd steampipe && bash ./gitlab-actions.sh
      
  notifydevs:
    name: Notify Developers
    
    needs: [ publish ]
    
    runs-on: ubuntu-latest
    
    permissions: read-all
    
    steps:
      - name: Send Discord Message
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          username: "SixGrid Release Notifications"
          avatar_url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
          message: "<@&783624073812377601> New SixGrid Release `${{ github.event.inputs.name }} (${{ github.event.inputs.tag }})`\r\n${{ needs.mktag.outputs.web_url }}"
        

